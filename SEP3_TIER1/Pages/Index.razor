@page "/"
@using SEP3_TIER1.Data
@using System.Net.Http
@inject HttpClient Http
@inject IJSRuntime JsRuntime
@using System.Text.Json

<div class="wrapper wrapper--w1226">
    <div class="headertable">
        <div class="card-body">
            <div class="iconImgResize"> <img src="/Images/departure.png" /></div><b>Outbound</b>
        </div>
    </div>
    <div class="tableradius">
        <table class="table table-striped textedit">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Flight</th>
                    <th scope="col">Airplane</th>
                    <th scope="col">Airline</th>
                    <th scope="col">Origin</th>
                    <th scope="col">Destination</th>
                    <th scope="col">Delay</th>
                    <th scope="col">Departure time</th>
                    <th></th>
                </tr>
            </thead>

            <tbody>

                @{
                    int idn = 1;
                    foreach (var data in datas.OrderBy(x=>x.DepartureTime))
                    {
                        if (data.StartLocation == "Aalborg")
                        {
                            var flight = data.CallSign;
                            <tr>
                                <td>@idn</td>
                                <td>@data.CallSign</td>
                                <td>@data.Model</td>
                                <td>@data.Company</td>
                                <td>@data.StartLocation</td>
                                <td>@data.EndLocation</td>
                                <td>@data.Delay</td>
                                <td>@data.DepartureTime</td>
                                <td valign="middle"><button class="btn btn-danger " @onclick="(e => DeleteItem(data.CallSign))">X</button></td>
                            </tr>
                            idn++;
                        }
                    }
                }
            </tbody>
        </table>
    </div>

    <div class="headertable">
        <div class="card-body">
            <div class="iconImgResize"> <img src="/Images/arrival.png" /></div><b>Inbound</b>
        </div>
    </div>

    <table class="table table-striped textedit">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Flight</th>
                <th scope="col">Airplane</th>
                <th scope="col">Airline</th>
                <th scope="col">Origin</th>
                <th scope="col">Destination</th>
                <th scope="col">Delay</th>
                <th scope="col">Arrival time</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @{
                int id = 1;
                foreach (var data in datas.OrderBy(x=>x.ArrivalTime))
                {
                    if (!(data.StartLocation == "Aalborg"))
                    {
                        var flight = data.CallSign;
                        <tr>
                            <td>@id</td>
                            <td>@data.CallSign</td>
                            <td>@data.Model</td>
                            <td>@data.Company</td>
                            <td>@data.StartLocation</td>
                            <td>@data.EndLocation</td>
                            <td>@data.Delay</td>
                            <td>@data.ArrivalTime</td>
                            <td valign="middle"><button class="btn btn-danger " @onclick="(e => DeleteItem(data.CallSign))">X</button></td>
                        </tr>
                        id++;
                    }
                }
            }
        </tbody>
    </table>
</div>

@code{
    private List<PlaneDTO> datas = new List<PlaneDTO>();
    private List<PlaneDTO> planes = new List<PlaneDTO>();

    private void Datas()
    {
   foreach (var plane in planes)
            foreach(var data in datas)
            {

                if (data.Model==(plane.RegistrationNo))
                {
                    data.Model = plane.Model;
                }
            }
    }


    private PlaneDTO ItemToBeDeleted;
    protected override async Task OnInitializedAsync()
    {
        planes = await Http.GetJsonAsync<List<PlaneDTO>>("https://localhost:44397/planes");
        datas = await Http.GetJsonAsync<List<PlaneDTO>>("https://localhost:44397/FlightPlans");
        Datas();
    }

    async void DeleteItem(string Flight)
    {
        bool isConfirmed = await JsRuntime.InvokeAsync<bool>("confirmDelete");
        if (isConfirmed)
        {
            try
            {
                foreach (var data in datas)
                {
                    if (data.CallSign == Flight)
                    {
                        datas.Remove(data);
                        await Http.DeleteAsync("https://localhost:44397/FlightPlans/"+data.CallSign);
                        this.StateHasChanged();
                    }
                }

            }
            catch (Exception e)
            {

            }

        }
    }
}
